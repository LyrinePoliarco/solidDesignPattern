public class TestLibrarySystem {
    public static void main(String[] args) {
        // Create resources
        LibraryResource book1 = new Book("Design Patterns", "Erich Gamma", "978-0201633610");
        LibraryResource book2 = new Book("Clean Code", "Robert C. Martin", "978-0132350884");
        LibraryResource journal1 = new Journal("IEEE Software", "IEEE", 38);
        LibraryResource thesis1 = new Thesis("Machine Learning Applications", "John Smith", "Computer Science");
        LibraryResource newspaper1 = new Newspaper("The New York Times", "NYT", "2023-05-15");
        LibraryResource audioBook1 = new AudioBook("The Great Gatsby", "Jake Gyllenhaal", 420);
        
        // Create library and add resources
        LibraryCatalog library = new Library();
        library.addResource(book1);
        library.addResource(book2);
        library.addResource(journal1);
        library.addResource(thesis1);
        library.addResource(newspaper1);
        library.addResource(audioBook1);
        
        // Create borrowing service
        BorrowingService borrowingService = new StandardBorrowingService();
        
        // Create student
        LibraryUser student = new Student("Alice", "S12345", borrowingService);
        
        // Test borrowing different resource types
        System.out.println("===== Testing Resource Borrowing =====");
        student.borrowResource(book1);
        student.borrowResource(journal1);
        student.borrowResource(thesis1);
        
        // Try borrowing already borrowed resource
        System.out.println("\n===== Testing Already Borrowed Resource =====");
        student.borrowResource(book1);
        
        // Test returning resources
        System.out.println("\n===== Testing Resource Returning =====");
        student.returnResource(book1);
        
        // Show currently borrowed resources
        System.out.println("\n===== Currently Borrowed Resources =====");
        for (LibraryResource resource : student.getBorrowedResources()) {
            System.out.println(resource.getResourceType() + ": " + resource.getTitle());
        }
        
        // Test borrowing new resource type (AudioBook)
        System.out.println("\n===== Testing New Resource Type (AudioBook) =====");
        student.borrowResource(audioBook1);
        
        // Final list of borrowed resources
        System.out.println("\n===== Final Borrowed Resources =====");
        for (LibraryResource resource : student.getBorrowedResources()) {
            System.out.println(resource.getResourceType() + ": " + resource.getTitle());
        }

        // Demonstrate borrowing a book after returning it
        System.out.println("\n===== Testing Re-borrowing =====");
        student.borrowResource(book1);
    }
}
